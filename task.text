do:

gem-install
  gem 'devise'
    setting
      rails g devise:install

  gem 'active_admin'
    setting
      rails g active_admin:install
      bundle exec rake db:create
      bundle exec rake db:migrate
      bundle exec rake db:seed

  gem 'bootstrap'
  gem 'jquery-rails'
    setting
      yarn add bootstrap jquery popper.js
      (コマンド)

    app/javascript/packs/application.js
      require("jquery")

    config/webpack/environment.js
      const webpack = require('webpack')
      environment.plugins.prepend('Provide',
        new webpack.ProvidePlugin({
          $: 'jquery/src/jquery',
          jQuery: 'jquery/src/jquery'
        })
      )
    
    app/javascript/src/application.scss
      @import '~bootstrap/scss/bootstrap';

    app/javascript/packs/application.js
      import 'bootstrap'
      import '../src/application.scss'

git commit -m "first_commit,gem_setting"

model-create
  model-create
    rails g model Dispatch
    rails g devise Worker
    
  migrate,association-setting
    dispatch:
      migrate:
        t.date    :delivery_day,       null: false
        t.string  :delivery_time,      null: false
        t.string  :delivery_target,    null: false
        t.string  :truck_num,          null: false
        t.text    :remarks
        t.integer :worker_id,          null: false

      association:
        belongs_to :worker

    worker:
      migrate:  (add-devise)
        t.string :name,        null: false
        t.string :tel,         null: false

      association:
        has_many :dispatches

  bundle exec rake db:migrate

  admin-setting
    admin-add_resource:
      rails g active_admin:resource worker
      rails g active_admin:resource dispatch

    worker_create_view-setting:
      app/admin/worker.rb
        permit_params :name, :tel, :email, :password, :remember_created_at
    
        form do |f|
          f.inputs do
            f.input :name
            f.input :tel
            f.input :email
            f.input :password
            f.input :remember_created_at
          end
          f.actions
        end

    gem 'active_admin_importable'
        setting
        app/admin/dispatches.rb
          active_admin_importable do |model, hash|
          model.create(kye: hash[:value])
          end

    gem 'i18n'
      setting
        config/application.rb
          config.i18n.default_locale = :ja

        config/locales
          ja.yml create
          devise.ja.yml
          active_admin.ja.yml
          model.ja.yml

git commit -m "model_create,admin_setting"

views,controller,routes-create
  routes
  routes.rb
    root to: "workers#show"

    resources :workers     only: [:index, :show]
    resources :dispatches  only: [:index, :show]

  test_date-create
    worker
      山本,111-1111-1111,yamamoto@hoge.com,111111
      稲田,222-2222-2222,inada@hoge.com,222222
      木村,333-3333-3333,kimura@hoge.com,333333
      清水,444-4444-4444,shimizu@hoge.com,444444

    dispatch
      sample2_dispatch.csv(adminからインポート)
        :delivery_day,:delivery_target,:delivery_time,:truck_num,:remarks,worker_id
        2020-04-21,熊本,8:00,1111,なし,1
        2020-04-21,長崎,7:00,2222,仕様書添付,2
        2020-04-22,鹿児島,6:00,3333,なし,3
        2020-04-22,宮崎,8:00,4444,指定の場所以外でのアイドリング禁止,4
      sample3_disaptch.csv(adminからインポート)
        :delivery_day,:delivery_target,:delivery_time,:truck_num,:remarks,worker_id
        2020-05-21,熊本,8:00,1111,なし,1
        2020-05-21,長崎,7:00,2222,仕様書添付,2
        2020-05-22,鹿児島,6:00,3333,なし,3
        2020-05-22,宮崎,8:00,4444,指定の場所以外でのアイドリング禁止,4


  controller-create
    workers
      def index
        @workers = Worker.all
      end

      def show
        @worker_dispatches = Worker.find(params[:id])
        @worker_dispatch = @worker_dispatches.dispatches.find_by(delivery_day: "2020-04-22")
      end

    dispatches
      def index
        @dispatch_days = Dispatch.select(:delivery_day).group(:delivery_day).order(delivery_day: :desc)
      end

      def show
        @detail_dispatches = Dispatch.where(delivery_day: params[:delivery_day])
      end


  views-create
    workers
      index.html.erb
        h1 ドライバー一覧   
          
          - @workers.each do | worker |
          
          p 名前：　= worker.name  電話番号：　= worker.tel


      show.html.erb
        h1  = "#{@worker_dispatch.name}さんのマイページ"
        h2  = "#{@worker_dispatch.delivery_day.mon}"月 
            ="#{@worker_dispatch.delivery_day.day}"日の配送先は

        p  配送時間： = "#{@worker_dispatch.delivery_time}"
        p  配送先： = "#{@worker_dispatch.delivery_target}"
        p  備考： = "#{@worker_dispatch.remarks}"

        link_to '配車一覧へ' dispatch_path(delivery_day: @worker_dispatch.delivery_day)

    dispatches
      index.html.erb
        h1 配信日一覧

        - @dispatch_days.each do | day |
          link_to "#{day.delivery_day.mon}月#{day.delivery_day.day}日", dispatch_path(delivery_day: day.delivery_day)

      routes.rb
        resources :dispatches,  only: [:index, :show], param: :delivery_day

      dispatch.rb
        def to_param
          delivery_day
        end

      show.html.erb
        h1 = (params[:delivery_day]).to_date.mon 月
           = (params[:delivery_day]).to_date.day 日の配車一覧

        table
          thead
            tr
              th = 配送時間
              th = 配送先
              th = トラックNO.
              th = 名前
              th = 備考
          tbody
            - @detail_dispatches.each do | dispatch |
              tr
                td = dispatch.delivery_time
                td = dispatch.delivery_target
                td = dispatch.truck_num
                td = dispatch.worker.name
                td = dispatch.remarks
              tr


ログインしていなければログインしてください。
マイページへのリンク

  app/views/layouts/application.rb
    <% if worker_signed_in? %>
      <%= link_to "ログアウト", destroy_worker_session_path, method: :delete %>
    
      <%= link_to "マイページへ", worker_path(current_worker.id) %>
    <% else %>
      <%= link_to "ログイン", new_user_session_path, class: 'post' %>
    <% end %>

  app/controllers/applicationcontroller.rb
    before_action :authenticate_user!

  app/controllers/workers_controller.rb
    def show
      @worker_dispatches = Worker.find(current_worker.id)
      @worker_dispatch = @worker_dispatches.dispatches.find_by(create_at: Date.today)
    end


to:

            


      

        




